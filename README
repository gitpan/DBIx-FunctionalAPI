NAME
    DBIx::FunctionalAPI - Some functions to expose your database as an API

VERSION
    This document describes version 0.04 of DBIx::FunctionalAPI (from Perl
    distribution DBIx-FunctionalAPI), released on 2014-06-25.

SYNOPSIS
DESCRIPTION
    NOTE: EARLY RELEASE AND MINIMAL FUNCTIONALITIES

    This module provides a set of functions to get information and modify
    your DBI database. The functions are suitable in RPC-style or stateless
    client/server (like HTTP) API.

    Every function accepts "dbh" argument, but for convenience database
    handle can also be set via the $dbh package variable.

FUNCTIONS
  list_columns(%args) -> [status, msg, result, meta]
    Arguments ('*' denotes required arguments):

    *   dbh => *obj*

        Database handle.

    *   detail => *bool*

        Whether to return detailed records instead of just items/strings.

    *   table* => *str*

        Table name.

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

  list_rows(%args) -> [status, msg, result, meta]
    Arguments ('*' denotes required arguments):

    *   dbh => *obj*

        Database handle.

    *   detail => *bool*

        Whether to return detailed records instead of just items/strings.

    *   table* => *str*

        Table name.

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

  list_tables(%args) -> [status, msg, result, meta]
    Arguments ('*' denotes required arguments):

    *   dbh => *obj*

        Database handle.

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

TODO
    Option to select specific catalog and schema (table namespace).

SEE ALSO
HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/DBIx-FunctionalAPI>.

SOURCE
    Source repository is at
    <https://github.com/sharyanto/perl-DBIx-FunctionalAPI>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=DBIx-FunctionalAPI>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2014 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

